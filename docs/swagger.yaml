definitions:
  models.DefaultResponse:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
    type: object
  models.Error:
    properties:
      error:
        type: string
    type: object
  models.Message:
    properties:
      message:
        type: string
    type: object
  models.Url:
    properties:
      counter:
        type: integer
      created_at:
        type: integer
      id:
        type: string
      org_path:
        type: string
      qr_code_path:
        type: string
      short_path:
        type: string
      status:
        type: integer
      updated_at:
        type: integer
      user_id:
        type: string
    type: object
  models.UrlRequest:
    properties:
      custom_url:
        type: string
      exp_count:
        type: string
      exp_time:
        type: string
      org_path:
        type: string
    required:
    - org_path
    type: object
  models.UserLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.UserResponse:
    properties:
      created_at:
        type: integer
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      username:
        type: string
    type: object
  models.UserSignUpRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - confirm_password
    - email
    - first_name
    - last_name
    - password
    - username
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/v1/url:
    get:
      consumes:
      - application/json
      description: Get Urls
      produces:
      - application/json
      responses:
        "200":
          description: GetUrls successful
          schema:
            items:
              $ref: '#/definitions/models.Url'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Urls
      tags:
      - URL
    post:
      consumes:
      - application/json
      description: Create Url
      parameters:
      - description: Url
        in: body
        name: url
        required: true
        schema:
          $ref: '#/definitions/models.UrlRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Create successful
          schema:
            $ref: '#/definitions/models.Url'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Create Url
      tags:
      - URL
  /api/v1/url/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Url
      parameters:
      - description: UrlId
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Delete successful
          schema:
            $ref: '#/definitions/models.Message'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Url
      tags:
      - URL
    get:
      consumes:
      - application/json
      description: Get Url
      parameters:
      - description: UrlId
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetUrl successful
          schema:
            $ref: '#/definitions/models.Url'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Url
      tags:
      - URL
  /auth/signin:
    post:
      consumes:
      - application/json
      description: SignIn UserUrlRequest
      parameters:
      - description: SingIn
        in: body
        name: SignIn
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: SignIn successful
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.Error'
      summary: SignIn User
      tags:
      - User
  /auth/signout:
    post:
      consumes:
      - application/json
      description: Logout User
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/models.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Logout User
      tags:
      - User
  /auth/singup:
    post:
      consumes:
      - application/json
      description: SignUp User
      parameters:
      - description: SignUp
        in: body
        name: SignUp
        required: true
        schema:
          $ref: '#/definitions/models.UserSignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: SignUp successful
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.Error'
      summary: SignUp User
      tags:
      - User
swagger: "2.0"
